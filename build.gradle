/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2018-2022 Patrick Reinhart
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
plugins {
  id 'eclipse'
  id 'java-library'
  id 'com.diffplug.spotless' version '6.11.0'
  id 'org.owasp.dependencycheck' version '7.2.1'
  id 'org.kordamp.gradle.java-project' version '0.47.0'
}

apply {
  plugin 'org.kordamp.gradle.checkstyle'
  plugin 'org.kordamp.gradle.errorprone'
  plugin 'org.kordamp.gradle.sonar'
}

if (!project.hasProperty('sonatypeUsername')) ext.sonatypeUsername = '**undefined**'
if (!project.hasProperty('sonatypePassword')) ext.sonatypePassword = '**undefined**'
if (!project.hasProperty('sonarToken')) ext.sonarToken = '**undefined**'

//override from command line with -Pversion=x.y.z

group = 'net.reini'
version = '1.1.1-SNAPSHOT'

defaultTasks 'build'

java {
  sourceCompatibility = JavaVersion.VERSION_11
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation 'org.assertj:assertj-core:3.23.1'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
  testImplementation 'org.mockito:mockito-junit-jupiter:4.8.1'

  testRuntimeOnly 'com.github.spotbugs:spotbugs-annotations:4.7.2'
  testRuntimeOnly 'org.junit.platform:junit-platform-runner:1.9.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

compileJava {
  doFirst {
    options.compilerArgs = [
      '-Xlint:all'
    ]
  }
}

compileJava {
  doFirst {
    options.compilerArgs = [
      '-Xlint:all'
    ]
  }
}

jar {
  manifest.attributes 'Automatic-Module-Name': "net.reini.print"
}

spotless {
  java {
    eclipse().configFile('gradle/virtualprinter-style.xml')
    importOrderFile('gradle/virtualprinter.importorder')
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'skipped'
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'pr', 'ea'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

config {
  release = !project.version.endsWith('-SNAPSHOT')
  info {
    vendor = 'reinhapa'
    name = 'Virtual Print service'
    description = 'Print service lookup simulating a printer.'
    inceptionYear = '2018'
    links {
      website = 'https://github.com/reinhapa/virtual-printer'
      issueTracker = 'https://github.com/reinhapa/virtual-printer/issues'
      scm = 'https://github.com/reinhapa/virtual-printer.git'
    }
    scm {
      connection = 'scm:git://github.com/reinhapa/virtual-printer.git'
      developerConnection = 'scm:git://github.com/reinhapa/virtual-printer.git'
      url = 'https://github.com/reinhapa/virtual-printer'
    }
    people {
      person {
        id = 'reinhapa'
        name = 'Patrick Reinhart'
        email = 'patrick@reini.net'
        roles = [ 'developer' ]
      }
    }
    repositories {
      repository {
        name = 'sonatypeRelease'
        url  = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
      }
      repository {
        name = 'sonatypeSnapshot'
        url  = 'https://oss.sonatype.org/content/repositories/snapshots/'
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
      }
    }
  }
  quality {
    errorprone {
      errorProneVersion = '2.15.0'
    }
    sonar {
      hostUrl = 'https://sonarcloud.io'
      login = sonarToken
      organization = 'reinhapa'
      projectKey = 'reinhapa_virtual-printer'
    }
  }
  licensing {
    licenses {
      license {
        id = 'MIT'
      }
    }
  }
  docs {
    javadoc {
      autoLinks.enabled = false
      options {
        docTitle = "Virtual Printers ${project.version} API"
        header = "Virtual Printers ${project.version} API"
        windowTitle = "Virtual Printers ${project.version} API"
      }
    }
  }
  artifacts {
    minpom.enabled = false
  }
  publishing {
    signing {
      enabled = release
      secretKey = project.hasProperty('signingKey') ? signingKey : null
      password = project.hasProperty('signingPassword') ? signingPassword : null
    }
    releasesRepository  = 'sonatypeRelease'
    snapshotsRepository = 'sonatypeSnapshot'
  }
}

normalization {
  runtimeClasspath {
    ignore('/META-INF/MANIFEST.MF')
  }
}
